name: Go

on:
  push:
    branches: [ "main" ]


jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21.x' ]
        goos: [linux, darwin]
        goarch: [amd64, arm64]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Install dependencies
        run: go mod download

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          go build -o goimg-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Archive binary
        run: tar -czf goimg-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz goimg-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: goimg-${{ matrix.goos }}-${{ matrix.goarch }}
          path: goimg-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          release_id: ${{ steps.create_release.outputs.id }}
          asset_path: goimg-*
          asset_name: goimg-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
          label: ${{ matrix.goos }}-${{ matrix.goarch }}
